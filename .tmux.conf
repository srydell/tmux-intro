# --------------------------------
# ------- tmux Config file -------
# --------------------------------

# Set the delay between prefix and command
set-option -s escape-time 1

# Key bindings in tmux prompt (prefix + :)
# Partial vim emulation is confusing
set-option -g status-keys 'emacs'

# Set mouse on
set-option -g mouse on

# Automatically renumber windows upon deletion
set-option -g renumber-windows on

# Resize panes immediately for all clients
set-window-option -g aggressive-resize on

# --------------------------------
# --------- Key bindings ---------
# --------------------------------
# The syntax for binding a key (shortcut) is the following:
#     bind-key {keystrokes to bind} {what to do when keystrokes are pressed}

# Remap prefix from CTRL-b to CTRL-a
unbind C-b
set-option -g prefix C-a

# Use C-a in other programs by pressing it twice
bind-key C-a send-prefix

# Reload config file with r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Set the current pane to fullscreen with prefix+f
unbind z
bind-key f resize-pane -Z

# Shortcut to synchronize panes toggle
bind-key S set-window-option synchronize-panes

# Put pane on a new window but keep focus
bind-key b break-pane -d

# Enable vi keys in copy mode
# Enter copy mode by pressing prefix+[
# You can then first select things by pressing v
# then move the selection with 'vi-keys': h is left, j is down, k is up and l is right
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle

# Movement integration between vim and tmux splits
# Move to panes with vi keys as ctrl followed by hjkl
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R
bind-key -n C-\ select-pane -l

# Make the movement work in copy mode aswell
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Paste clipboard buffer with P
unbind P
bind-key P paste-buffer

# Switch panes with vi-keys: h, j, k, l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Switch window multiple times after only one prefix send (-r option)
# If you have three windows, you can now press prefix+n+n to move from 0 to 2
# instead of prefix+n+prefix+n
bind-key -r n select-window -t :+
bind-key -r p select-window -t :-

# Resize panes with HJKL
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Split panes and do retain the current directory of existing pane
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Split pane and move to the directory where you first started the session
bind-key _ split-window -v
bind-key \ split-window -h

# Disable confirm on killing pane/window
bind-key x kill-pane
bind-key X kill-window
unbind &

# --------------------------------
# ------- Colors & visuals -------
# --------------------------------

# Use either screen or screen-256color. (Depending on how many colors your terminal can show)
if-shell 'test $(tput colors) -ge 256' 'set-option -g default-terminal "screen-256color"'

# Set the status line's colors
set-option -g status-style fg=default,bg=default

# Set colors for the active window
set-window-option -g window-status-current-style fg=colour12,bold,bg=default

# Set border colors between panes
set-option -g pane-border-fg colour12
set-option -g pane-border-bg default
set-option -g pane-active-border-fg colour12
set-option -g pane-active-border-bg default

# Center the window list in the status line
set-option -g status-justify centre

# Disable activity alerts
set-window-option -g monitor-activity off
set-option -g visual-activity off

# Max length of the {left,right} side
set-option -g status-left-length 50
set-option -g status-right-length 50

# Status line left shows session
set-option -g status-left "#S ‚ùØ"
set-option -g status-right "#(date '+%a, %b %d - %H:%M')"
